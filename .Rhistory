scale_x_continuous(breaks=c(0,1,2,3,4),labels = c('cluster0','cluster1','cluster2','cluster3','cluster4'))+
theme_classic()+
geom_hline(aes(yintercept= (-log10(0.05))),na.rm=TRUE,linetype=2,size=3)+
theme(text = element_text(size = 18))+
ylab(NULL)+
xlab(NULL)
a
a+theme(axis.text.x=element_blank())+theme(axis.text.y=element_blank()) #1000*600保存
sig_result<- read_csv("Desktop/PDACA_celltype_sig.csv") ###修改2
sig_result$data<-1
for (i in (1:nrow(sig_result))){
if (sig_result[i,3]>=3)
{
sig_result[i,4]<-sig_result[i,3]
}
else
sig_result[i,4]<-0
}
View(sig_result)
a<-ggplot(sig_result,aes(x=custer,y=data,fill=tool))+
geom_col(position = 'dodge',colour='black')+
scale_fill_brewer(palette = 'Pastel2')+
# scale_y_continuous(breaks = seq(10,30, by=5),expand = c(0,0))+  # terminal
# scale_y_continuous(breaks = seq(10,55, by=5),expand = c(0,0))+  # MHC
scale_y_continuous(breaks = seq(10,105, by=50),expand = c(0,0))+  # cancerB
scale_x_continuous(breaks=c(0,1,2,3,),labels = c('cluster0','cluster1','cluster2','cluster3','cluster4'))+
theme_classic()+ ##去掉背景
#geom_hline(aes(yintercept= (-log10(0.05))),na.rm=TRUE,linetype=2)+ ##添加阀值线
theme(text = element_text(size = 18))+
ylab(NULL)+
xlab(NULL)+
theme(axis.text.x=element_blank())
#####再画mia上面的图
sig_result<- read_csv("Desktop/PDACA_celltype_sig.csv") ###修改2
sig_result$data<-1
for (i in (1:nrow(sig_result))){
if (sig_result[i,3]>=3)
{
sig_result[i,4]<-sig_result[i,3]
}
else
sig_result[i,4]<-0
}
a<-ggplot(sig_result,aes(x=custer,y=data,fill=tool))+
geom_col(position = 'dodge',colour='black')+
scale_fill_brewer(palette = 'Pastel2')+
# scale_y_continuous(breaks = seq(10,30, by=5),expand = c(0,0))+  # terminal
# scale_y_continuous(breaks = seq(10,55, by=5),expand = c(0,0))+  # MHC
scale_y_continuous(breaks = seq(10,105, by=50),expand = c(0,0))+  # cancerB
scale_x_continuous(breaks=c(0,1,2,3),labels = c('cluster0','cluster1','cluster2','cluster3'))+
theme_classic()+ ##去掉背景
#geom_hline(aes(yintercept= (-log10(0.05))),na.rm=TRUE,linetype=2)+ ##添加阀值线
theme(text = element_text(size = 18))+
ylab(NULL)+
xlab(NULL)+
theme(axis.text.x=element_blank())
a
a+theme(axis.text.x=element_blank())+theme(axis.text.y=element_blank()) #1000*600保存
######################################## 4 PDAC-B三个细胞类型显著结果的条形图 ########################################
sig_result<-read_csv("Desktop/PDACB_celltype_sig.csv") ###修改1
sig_result$data<-1
for (i in (1:nrow(sig_result))){
if (sig_result[i,3]<3)
{
sig_result[i,4]<-sig_result[i,3]
}
else
sig_result[i,4]<-3
}
#####先画一个下面的图
a<-ggplot(sig_result,aes(x=custer,y=data,fill=tool))+
geom_col(position = 'dodge',colour='black')+
scale_fill_brewer(palette = 'Set3')+
scale_y_continuous(breaks = seq(0,3.5, by=0.5))+
scale_x_continuous(breaks=c(0,1,2,3,4),labels = c('cluster0','cluster1','cluster2','cluster3','cluster4'))+
theme_classic()+
geom_hline(aes(yintercept= (-log10(0.05))),na.rm=TRUE,linetype=2,size=3)+
theme(text = element_text(size = 18))+
ylab(NULL)+
xlab(NULL)
a
a+theme(axis.text.x=element_blank())+theme(axis.text.y=element_blank()) #1000*600保存
#####再画mia上面的图
sig_result<- read_csv("Desktop/PDACB_celltype_sig.csv") ###修改2
sig_result$data<-1
for (i in (1:nrow(sig_result))){
if (sig_result[i,3]>=3)
{
sig_result[i,4]<-sig_result[i,3]
}
else
sig_result[i,4]<-0
}
View(sig_result)
a<-ggplot(sig_result,aes(x=custer,y=data,fill=tool))+
geom_col(position = 'dodge',colour='black')+
scale_fill_brewer(palette = 'Set3')+
scale_y_continuous(breaks = seq(10,40, by=5),expand = c(0,0))+  # terminal
# scale_y_continuous(breaks = seq(10,55, by=5),expand = c(0,0))+  # MHC
# scale_y_continuous(breaks = seq(10,105, by=50),expand = c(0,0))+  # cancerB
scale_x_continuous(breaks=c(0,1,2,3),labels = c('cluster0','cluster1','cluster2','cluster3'))+
theme_classic()+ ##去掉背景
#geom_hline(aes(yintercept= (-log10(0.05))),na.rm=TRUE,linetype=2)+ ##添加阀值线
theme(text = element_text(size = 18))+
ylab(NULL)+
xlab(NULL)+
theme(axis.text.x=element_blank())
a
a+theme(axis.text.x=element_blank())+theme(axis.text.y=element_blank()) #1000*600保存
sig_result<-read_csv("Desktop/PDACB_celltype_sig.csv") ###修改1
sig_result$data<-1
for (i in (1:nrow(sig_result))){
if (sig_result[i,3]<3)
{
sig_result[i,4]<-sig_result[i,3]
}
else
sig_result[i,4]<-3
}
#####先画一个下面的图
a<-ggplot(sig_result,aes(x=custer,y=data,fill=tool))+
geom_col(position = 'dodge',colour='black')+
scale_fill_brewer(palette = 'Set3')+
scale_y_continuous(breaks = seq(0,3.5, by=0.5))+
scale_x_continuous(breaks=c(0,1,2,3,4),labels = c('cluster0','cluster1','cluster2','cluster3','cluster4'))+
theme_classic()+
geom_hline(aes(yintercept= (-log10(0.05))),na.rm=TRUE,linetype=2,size=3)+
theme(text = element_text(size = 18))+
ylab(NULL)+
xlab(NULL)
a
a+theme(axis.text.x=element_blank())+theme(axis.text.y=element_blank()) #1000*600保存
#####再画mia上面的图
sig_result<- read_csv("Desktop/PDACB_celltype_sig.csv") ###修改2
sig_result$data<-1
for (i in (1:nrow(sig_result))){
if (sig_result[i,3]>=3)
{
sig_result[i,4]<-sig_result[i,3]
}
else
sig_result[i,4]<-0
}
View(sig_result)
a<-ggplot(sig_result,aes(x=custer,y=data,fill=tool))+
geom_col(position = 'dodge',colour='black')+
scale_fill_brewer(palette = 'Set3')+
# scale_y_continuous(breaks = seq(10,40, by=5),expand = c(0,0))+  # terminal
scale_y_continuous(breaks = seq(10,55, by=5),expand = c(0,0))+  # MHC
# scale_y_continuous(breaks = seq(10,105, by=50),expand = c(0,0))+  # cancerB
scale_x_continuous(breaks=c(0,1,2,3),labels = c('cluster0','cluster1','cluster2','cluster3'))+
theme_classic()+ ##去掉背景
#geom_hline(aes(yintercept= (-log10(0.05))),na.rm=TRUE,linetype=2)+ ##添加阀值线
theme(text = element_text(size = 18))+
ylab(NULL)+
xlab(NULL)+
theme(axis.text.x=element_blank())
a
a+theme(axis.text.x=element_blank())+theme(axis.text.y=element_blank()) #1000*600保存
######################################## 4 PDAC-B三个细胞类型显著结果的条形图 ########################################
sig_result<-read_csv("Desktop/PDACB_celltype_sig.csv") ###修改1
sig_result$data<-1
for (i in (1:nrow(sig_result))){
if (sig_result[i,3]<3)
{
sig_result[i,4]<-sig_result[i,3]
}
else
sig_result[i,4]<-3
}
#####先画一个下面的图
a<-ggplot(sig_result,aes(x=custer,y=data,fill=tool))+
geom_col(position = 'dodge',colour='black')+
scale_fill_brewer(palette = 'Set3')+
scale_y_continuous(breaks = seq(0,3.5, by=0.5))+
scale_x_continuous(breaks=c(0,1,2,3,4),labels = c('cluster0','cluster1','cluster2','cluster3','cluster4'))+
theme_classic()+
geom_hline(aes(yintercept= (-log10(0.05))),na.rm=TRUE,linetype=2,size=3)+
theme(text = element_text(size = 18))+
ylab(NULL)+
xlab(NULL)
a
a+theme(axis.text.x=element_blank())+theme(axis.text.y=element_blank()) #1000*600保存
#####再画mia上面的图
sig_result<- read_csv("Desktop/PDACB_celltype_sig.csv") ###修改2
sig_result$data<-1
for (i in (1:nrow(sig_result))){
if (sig_result[i,3]>=3)
{
sig_result[i,4]<-sig_result[i,3]
}
else
sig_result[i,4]<-0
}
View(sig_result)
a<-ggplot(sig_result,aes(x=custer,y=data,fill=tool))+
geom_col(position = 'dodge',colour='black')+
scale_fill_brewer(palette = 'Set3')+
# scale_y_continuous(breaks = seq(10,40, by=5),expand = c(0,0))+  # terminal
# scale_y_continuous(breaks = seq(10,55, by=5),expand = c(0,0))+  # MHC
scale_y_continuous(breaks = seq(10,20, by=5),expand = c(0,0))+  # cancerB
scale_x_continuous(breaks=c(0,1,2,3),labels = c('cluster0','cluster1','cluster2','cluster3'))+
theme_classic()+ ##去掉背景
#geom_hline(aes(yintercept= (-log10(0.05))),na.rm=TRUE,linetype=2)+ ##添加阀值线
theme(text = element_text(size = 18))+
ylab(NULL)+
xlab(NULL)+
theme(axis.text.x=element_blank())
a
a+theme(axis.text.x=element_blank())+theme(axis.text.y=element_blank()) #1000*600保存
library(readr)
data <- read_csv("Desktop/data.csv")
View(data)
# 创建数据
data <- c(10, 15, 8, 12)
names <- c("A", "B", "C", "D")
# 设置颜色向量
colors <- c("red", "blue", "green", "orange")
# 绘制条形图
barplot(data, col = colors, names.arg = names, main = "Bar Plot with Different Colors")
barplot(data, col = rainbow(length(data)), names.arg = names)
data <- read_csv("Desktop/data.csv")
color <- "#ADD8E6"
barplot(data$graphdata, col = color, names.arg = data$cluster)
data <- data[order(data$cluster), ]
barplot(data$graphdata, col = color, names.arg = data$cluster)
data <- read_csv("Desktop/data.csv")
library(readr)
data <- read_csv("Desktop/data.csv")
a <- ggplot(data, aes(x = cluster, y = graphdata)) +
geom_col(position = 'dodge', colour = 'black', fill = "#ADD8E6") +
scale_y_continuous(breaks = seq(0, 3.5, by = 0.5)) +
scale_x_continuous(breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18),
labels = c('cluster0', 'cluster1', 'cluster2', 'cluster3', 'cluster4', 'cluster5', 'cluster6', 'cluster7', 'cluster8', 'cluster9', 'cluster10', 'cluster11', 'cluster12', 'cluster13', 'cluster14', 'cluster15', 'cluster16', 'cluster17', 'cluster18')) +
theme_classic() +
geom_hline(aes(yintercept = (-log10(0.05))), na.rm = TRUE, linetype = 2, size = 3) +
theme(text = element_text(size = 18)) +
ylab(NULL) +
xlab(NULL)
library(ggplot2)
a <- ggplot(data, aes(x = cluster, y = graphdata)) +
geom_col(position = 'dodge', colour = 'black', fill = "#ADD8E6") +
scale_y_continuous(breaks = seq(0, 3.5, by = 0.5)) +
scale_x_continuous(breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18),
labels = c('cluster0', 'cluster1', 'cluster2', 'cluster3', 'cluster4', 'cluster5', 'cluster6', 'cluster7', 'cluster8', 'cluster9', 'cluster10', 'cluster11', 'cluster12', 'cluster13', 'cluster14', 'cluster15', 'cluster16', 'cluster17', 'cluster18')) +
theme_classic() +
geom_hline(aes(yintercept = (-log10(0.05))), na.rm = TRUE, linetype = 2, size = 3) +
theme(text = element_text(size = 18)) +
ylab(NULL) +
xlab(NULL)
a
library(readr)
library(ggplot2)
data <- read_csv("Desktop/data.csv")
a <- ggplot(data, aes(x = cluster, y = graphdata)) +
geom_col(position = 'dodge', colour = 'black', fill = "#ADD8E6") +
scale_y_continuous(breaks = seq(0, 3.5, by = 0.5)) +
scale_x_continuous(breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18),
labels = c('cluster0', 'cluster1', 'cluster2', 'cluster3', 'cluster4', 'cluster5', 'cluster6', 'cluster7', 'cluster8', 'cluster9', 'cluster10', 'cluster11', 'cluster12', 'cluster13', 'cluster14', 'cluster15', 'cluster16', 'cluster17', 'cluster18')) +
theme_classic() +
geom_hline(aes(yintercept = (-log10(0.05))), na.rm = TRUE, linetype = 2, size = 3) +
theme(text = element_text(size = 18)) +
ylab(NULL) +
xlab(NULL)
a
library(readr)
library(ggplot2)
data <- read_csv("Desktop/data.csv")
a <- ggplot(data, aes(x = cluster, y = graphdata)) +
geom_col(position = 'dodge', colour = 'black', fill = "#ADD8E6") +
scale_y_continuous(breaks = seq(0, 3.5, by = 0.5)) +
scale_x_continuous(breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18),
labels = c('cluster0', 'cluster1', 'cluster2', 'cluster3', 'cluster4', 'cluster5', 'cluster6', 'cluster7', 'cluster8', 'cluster9', 'cluster10', 'cluster11', 'cluster12', 'cluster13', 'cluster14', 'cluster15', 'cluster16', 'cluster17', 'cluster18')) +
theme_classic() +
geom_hline(aes(yintercept = (-log10(0.05))), na.rm = TRUE, linetype = 2, size = 3) +
theme(text = element_text(size = 18)) +
ylab(NULL) +
xlab(NULL)
a
library(readr)
library(ggplot2)
data <- read_csv("Desktop/data.csv")
a <- ggplot(data, aes(x = cluster, y = graphdata)) +
geom_col(position = 'dodge', colour = 'black', fill = "#ADD8E6") +
scale_y_continuous(breaks = seq(0, 3.5, by = 0.5)) +
scale_x_continuous(breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18),
labels = c('cluster0', 'cluster1', 'cluster2', 'cluster3', 'cluster4', 'cluster5', 'cluster6', 'cluster7', 'cluster8', 'cluster9', 'cluster10', 'cluster11', 'cluster12', 'cluster13', 'cluster14', 'cluster15', 'cluster16', 'cluster17', 'cluster18')) +
theme_classic() +
geom_hline(aes(yintercept = (-log10(0.05))), na.rm = TRUE, linetype = 2, size = 3) +
theme(text = element_text(size = 18)) +
ylab(NULL) +
xlab(NULL)
a
data <- read_csv("Desktop/data.csv")
library(readr)
library(ggplot2)
data <- read_csv("Desktop/data.csv")
a <- ggplot(data, aes(x = cluster, y = graphdata)) +
geom_col(position = 'dodge', colour = 'black', fill = "#ADD8E6") +
scale_y_continuous(breaks = seq(0, 3.5, by = 0.5)) +
scale_x_continuous(breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18),
labels = c('cluster0', 'cluster1', 'cluster2', 'cluster3', 'cluster4', 'cluster5', 'cluster6', 'cluster7', 'cluster8', 'cluster9', 'cluster10', 'cluster11', 'cluster12', 'cluster13', 'cluster14', 'cluster15', 'cluster16', 'cluster17', 'cluster18')) +
theme_classic() +
geom_hline(aes(yintercept = (-log10(0.05))), na.rm = TRUE, linetype = 2, size = 3) +
theme(text = element_text(size = 18)) +
ylab(NULL) +
xlab(NULL)
print(a)
library(readr)
data1 <- read_csv("Desktop/data1.csv")
View(data1)
library(readr)
X223Canadian_sample_order <- read_csv("Desktop/223Canadian-sample-order.csv")
View(X223Canadian_sample_order)
df <- merge(data1,X223Canadian_sample_order,by.x=`PID#`, by.y=223-indel-samples)
colnames(data1)[2] <- 'index'
df <- merge(data1,X223Canadian_sample_order,by.x=index, by.y=223-indel-samples)
df <- merge(data1, X223Canadian_sample_order, by.x = index, by.y = 223-indel-samples)
data1<- as.data.frame(data1)
df <- merge(data1, X223Canadian_sample_order, by.x = index, by.y = 223-indel-samples)
colnames(data1)
df <- merge(data1, X223Canadian_sample_order, by.x = "index", by.y = 223-indel-samples)
colnames(X223Canadian_sample_order)[1] <- "index"
df <- merge(data1, X223Canadian_sample_order, by.x = "index", by.y = "index")
View(df)
library(readr)
data1 <- read_csv("Desktop/data1.csv")
View(data1)
library(readr)
X223Canadian_sample_order <- read_csv("Desktop/223Canadian-sample-order.csv")
View(X223Canadian_sample_order)
df <- merge(data1, X223Canadian_sample_order, by.x = "index", by.y = "index")
View(df)
table(df$Gender)
table(df$Diagnosis)
summary(df$`age at onset`)
df$`age at onset`<- as.numeric(df$`age at onset`)
summary(df$`age at onset`)
table(df$`Site of Onset`)
write.csv(df,"./Desktop/df.csv")
Mouse_Brain_ST_Demo <- readRDS("~/Desktop/SpatialE/Example/Data/Mouse_Brain_ST_Demo.rds")
save(Mouse_Brain_ST_Demo, file = "~/Desktop/SpatialE/data/Mouse_Brain_ST_Demo.rda")
setwd("Desktop/SpatialE")
Mouse_Brain_ST_Demo <- readRDS("~/Desktop/SpatialE/Example/Data/Mouse_Brain_ST_Demo.rds")
save(Mouse_Brain_ST_Demo, file = "~/Desktop/SpatialE/data/Mouse_Brain_ST_Demo.rda")
library(devtools)
build()
install()
260ALS_genes <- readRDS("~/Desktop/SpatialE/Example/Data/260ALS_genes.rds")
ALS_genes <- readRDS("~/Desktop/SpatialE/Example/Data/ALS_genes.rds")
save(ALS_genes, file = "~/Desktop/SpatialE/data/ALS_genes.rda")
load("~/Desktop/SpatialE/Example/Data/cell_type_marker_genes.rda")
save(ALS_genes, file = "~/Desktop/SpatialE/data/cell_type_marker_genes.rda")
library(devtools)
build()
install()
remove.packages("SpatialE")
library(devtools)
options(timeout=9999999) # Set a lengthy timeout for the SpatialE download.
install_github("https://github.com/TJ-zhanglab/SpatialE.git")
install_github("https://github.com/TJ-zhanglab/SpatialE.git")
install_github("https://github.com/TJ-zhanglab/SpatialE.git")
library(SpatialE)
data(cell_type_marker_genes)
force(ALS_genes)
data(Mouse_Brain_ST_Demo)
force(Mouse_Brain_ST_Demo)
View(Mouse_Brain_ST_Demo)
SpatialDimPlot(Mouse_Brain_ST_Demo, label = T, label.size = 7)
data(Mouse_Brain_ST_Demo)
SpatialDimPlot(Mouse_Brain_ST_Demo, label = T, label.size = 7)
exp <- getExpMatrix(mouse_brain)
exp <- getExpMatrix(Mouse_Brain_ST_Demo)
View(Mouse_Brain_ST_Demo)
DefaultAssay(Mouse_Brain_ST_Demo) <- "Spatial"
exp <- getExpMatrix(Mouse_Brain_ST_Demo)
View(Mouse_Brain_ST_Demo)
Mouse_Brain_ST_Demo@assays[["Spatial"]]@counts
exp_matrix <- as.matrix(Mouse_Brain_ST_Demo@assays[["Spatial"]]@counts)
View(Mouse_Brain_ST_Demo)
DefaultAssay(Mouse_Brain_ST_Demo) <- "SCT"
DefaultAssay(Mouse_Brain_ST_Demo) <- "SCT"
remove.packages("SpatialE")
library(devtools)
options(timeout=9999999) # Set a lengthy timeout for the SpatialE download.
install_github("https://github.com/TJ-zhanglab/SpatialE.git")
Mouse_Brain_ST_Demo <- readRDS("~/Desktop/SpatialE/Example/Data/Mouse_Brain_ST_Demo.rds")
load("~/Desktop/SpatialE/data/Mouse_Brain_ST_Demo.rda")
load("~/Desktop/SpatialE/data/Mouse_Brain_ST_Demo.rda")
View(Mouse_Brain_ST_Demo)
Mouse_Brain_ST_Demo@assays$SCT@counts <- Mouse_Brain_ST_Demo@assays[["Spatial"]]@counts
Mouse_Brain_ST_Demo[["SCT"]] <- Mouse_Brain_ST_Demo@assays[["Spatial"]]@counts
View(Mouse_Brain_ST_Demo)
View(Mouse_Brain_ST_Demo@meta.data)
aa <- as.matrix(Mouse_Brain_ST_Demo@assays$SCT@counts)
load("~/Desktop/SpatialE/data/Mouse_Brain_ST_Demo.rda")
setwd("Desktop/SpatialE")
options(timeout=9999999) # Set a lengthy timeout for the SpatialE download.
install_github("https://github.com/TJ-zhanglab/SpatialE.git")
library(devtools)
install_github("https://github.com/TJ-zhanglab/SpatialE.git")
library(SpatialE)
data(cell_type_marker_genes)
force(manual_76k)
remove.packages("SpatialE")
load("~/Desktop/cell_type_marker_genes.rda")
save(cell_type_marker_genes, file = "data/cell_type_marker_genes.rda")
View(manual_76k)
load("~/Desktop/cell_type_marker_genes.rda")
cell_type_marker_genes <- manual_76k
save(cell_type_marker_genes, file = "data/cell_type_marker_genes.rda")
build()
install()
remove.packages("SpatialE")
options(timeout=9999999) # Set a lengthy timeout for the SpatialE download.
install_github("https://github.com/TJ-zhanglab/SpatialE.git")
library(SpatialE)
data(cell_type_marker_genes)
force(cell_type_marker_genes)
View(cell_type_marker_genes)
library(Seurat)
library(dplyr)
library(SpatialE)
data(Mouse_Brain_ST_Demo)
SpatialDimPlot(Mouse_Brain_ST_Demo, label = T, label.size = 7)
exp <- getExpMatrix(Mouse_Brain_ST_Demo)
exp[1:10,1:10]
str(exp)
cluster_spot_exp <- getClusteredExp(Mouse_Brain_ST_Demo, exp)
gene_clustered_mean <- Clustered_mean_Exp(cluster_spot_exp)
print(gene_clustered_mean[1:5,])
gene_clustered_max <- mutate(gene_clustered_mean, max = apply(gene_clustered_mean,1,max))
summary(gene_clustered_max$max)
gene_clustered_mean_filtered <- genefilter(gene_clustered_mean, threshhold = 0.1)
nrow(gene_clustered_max)
nrow(gene_clustered_mean_filtered)
delta <- getdelta(gene_clustered_mean_filtered, exp, type = 'high expression')
rescale_gene <- rescale(delta)
percentage_gene <- percentage(rescale_gene)
entropy_gene <- entropy(percentage_gene)
weight_gene <- weight(entropy_gene)
#Add the corresponding weight into the delta matrix
delta$gene <- rownames(delta)
delta <- left_join(delta, weight_gene, by = 'gene')
rownames(delta) <- delta$gene
delta <- left_join(delta, weight_gene, by = 'gene')
delta <- getdelta(gene_clustered_mean_filtered, exp, type = 'high expression')
rescale_gene <- rescale(delta)
percentage_gene <- percentage(rescale_gene)
entropy_gene <- entropy(percentage_gene)
weight_gene <- weight(entropy_gene)
#Add the corresponding weight into the delta matrix
delta$gene <- rownames(delta)
delta <- left_join(delta, weight_gene, by = 'gene')
rownames(delta) <- delta$gene
View(delta)
colnames(delta)
data(cell_type_marker_genes)
data(ALS_genes)
force(cell_type_marker_genes)
View(cell_type_marker_genes)
force(ALS_genes)
data(cell_type_marker_genes)
force(cell_type_marker_genes)
View(weight_gene)
target_geneset <- cell_type_marker_genes[cell_type_marker_genes$cluster=='L6 IT CTX',]
View(target_geneset)
target_geneset <- target_geneset[order(target_geneset$p_val_adj),]
target_geneset <- target_geneset[target_geneset$p_val_adj<0.05,]
nrow(target_geneset) #Output the number of significant genes
target_geneset <- target_geneset[1:200,] #Choose the top 200 marker genes as the target genes
target_geneset
target_delta <- delta[delta$gene %in% target_geneset$gene,]
target_gama <- getGama(target_delta, type = 'target')
random_sample_delta <- getRandomSample(delta, target_geneset$gene)
random_sample_gama <- getGama(random_sample_delta, type = 'random', cores = 30)
enrichment_output <- getEnrichmentOutput(target_gama, random_sample_gama)
View(enrichment_output)
colnames(enrichment_output)<- c("frequency","possibility","pval","cluster","fdr","bonferroni","graphdata")
spot_info <- Mouse_Brain_ST_Demo@meta.data
spot_info[1,ncol(spot_info)+1] <- NA
colnames(spot_info)[ncol(spot_info)] <- 'SpatialE_L6_IT_CTX' # Enter the name you want to define
View(spot_info)
for (i in 1:length(levels(spot_info$seurat_clusters))) {
for (j in 1:length(spot_info$seurat_clusters)) {
if (spot_info$seurat_clusters[j] == enrichment_output$cluster[i]) {
spot_info[j,ncol(spot_info)] <- enrichment_output$graphdata[i]
}
}
}
spot_info$cluster <- as.factor(spot_info$cluster)
for (i in 1:length(levels(spot_info$seurat_clusters))) {
for (j in 1:length(spot_info$seurat_clusters)) {
if (spot_info$seurat_clusters[j] == enrichment_output$cluster[i]) {
spot_info[j,ncol(spot_info)] <- enrichment_output$graphdata[i]
}
}
}
spot_info$cluster <- as.factor(spot_info$cluster)
for (i in 1:length(levels(spot_info$cluster))) {
for (j in 1:length(spot_info$cluster)) {
if (spot_info$cluster[j] == enrichment_output$cluster[i]) {
spot_info[j,ncol(spot_info)] <- enrichment_output$graphdata[i]
}
}
}
Mouse_Brain_ST_Demo@meta.data <- spot_info
colnames(spot_info)
SpatialFeaturePlot(Mouse_Brain_ST_Demo, features = c('SpatialE_L6_IT_CTX','MIA_L6_IT_CTX','SPOTlight_L6_IT_CTX',"CARD_L6_IT_CTX"), alpha = c(0.3,1))
SpatialFeaturePlot(Mouse_Brain_ST_Demo, features = c('SpatialE_L6_IT_CTX','MIA_L6_IT_CTX','SPOTlight_L6_IT_CTX',"CARD_L6_IT_CTX"), alpha = c(0.3,1),ncol = 4)
SpatialFeaturePlot(Mouse_Brain_ST_Demo, features = c('SpatialE_L6_IT_CTX','MIA_L6_IT_CTX','SPOTlight_L6_IT_CTX',"CARD_L6_IT_CTX"), alpha = c(0.3,1),ncol = 2)
SpatialFeaturePlot(Mouse_Brain_ST_Demo, features = c('SpatialE_L6_IT_CTX','MIA_L6_IT_CTX','SPOTlight_L6_IT_CTX',"CARD_L6_IT_CTX"), alpha = c(0.3,1),ncol = 4)
